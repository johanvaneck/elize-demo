{"version":3,"file":"js/260.7a35de17.js","mappings":"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","sources":["webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","webpack://elize-demo/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://elize-demo/./node_modules/es5-ext/global.js","webpack://elize-demo/./node_modules/@supabase/functions-js/dist/module/helper.js","webpack://elize-demo/./node_modules/@supabase/functions-js/dist/module/types.js","webpack://elize-demo/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","webpack://elize-demo/./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js","webpack://elize-demo/./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js","webpack://elize-demo/./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js","webpack://elize-demo/./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js","webpack://elize-demo/./node_modules/@supabase/postgrest-js/dist/module/version.js","webpack://elize-demo/./node_modules/@supabase/postgrest-js/dist/module/constants.js","webpack://elize-demo/./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/lib/version.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/lib/push.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","webpack://elize-demo/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/lib/errors.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/lib/version.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/lib/constants.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","webpack://elize-demo/./node_modules/@supabase/storage-js/dist/module/StorageClient.js","webpack://elize-demo/./node_modules/@supabase/supabase-js/dist/module/lib/version.js","webpack://elize-demo/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js","webpack://elize-demo/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","webpack://elize-demo/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/lib/version.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","webpack://elize-demo/./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","webpack://elize-demo/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","webpack://elize-demo/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","webpack://elize-demo/./node_modules/@supabase/supabase-js/dist/module/index.js","webpack://elize-demo/./src/supabase/index.ts","webpack://elize-demo/./node_modules/vue-loader/dist/exportHelper.js","webpack://elize-demo/./node_modules/websocket/lib/browser.js","webpack://elize-demo/./node_modules/websocket/lib/version.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.setItem(key, JSON.stringify(data));\n});\nexport const getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    const value = yield storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n});\nexport const removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.removeItem(key);\n});\nexport function decodeBase64URL(value) {\n    const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let base64 = '';\n    let chr1, chr2, chr3;\n    let enc1, enc2, enc3, enc4;\n    let i = 0;\n    value = value.replace('-', '+').replace('_', '/');\n    while (i < value.length) {\n        enc1 = key.indexOf(value.charAt(i++));\n        enc2 = key.indexOf(value.charAt(i++));\n        enc3 = key.indexOf(value.charAt(i++));\n        enc4 = key.indexOf(value.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        base64 = base64 + String.fromCharCode(chr1);\n        if (enc3 != 64 && chr2 != 0) {\n            base64 = base64 + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64 && chr3 != 0) {\n            base64 = base64 + String.fromCharCode(chr3);\n        }\n    }\n    return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n    // Regex checks for base64url format\n    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new Error('JWT is not valid: not a JWT structure');\n    }\n    if (!base64UrlRegex.test(parts[1])) {\n        throw new Error('JWT is not valid: payload is not in base64url format');\n    }\n    const base64Url = parts[1];\n    return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport function sleep(time) {\n    return new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = yield fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        }))();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nfunction sha256(randomString) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const encoder = new TextEncoder();\n        const encodedData = encoder.encode(randomString);\n        const hash = yield crypto.subtle.digest('SHA-256', encodedData);\n        const bytes = new Uint8Array(hash);\n        return Array.from(bytes)\n            .map((c) => String.fromCharCode(c))\n            .join('');\n    });\n}\nfunction base64urlencode(str) {\n    return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport function generatePKCEChallenge(verifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof crypto === 'undefined') {\n            console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n            return verifier;\n        }\n        const hashed = yield sha256(verifier);\n        return base64urlencode(hashed);\n    });\n}\n//# sourceMappingURL=helpers.js.map","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        super.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","import crossFetch from 'cross-fetch';\nexport default class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.isMaybeSingle = builder.isMaybeSingle;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = crossFetch;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=PostgrestBuilder.js.map","import PostgrestBuilder from './PostgrestBuilder';\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order foreign tables, but it doesn't affect the ordering of the\n     * current table.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.foreignTable - Set this to order a foreign table by foreign\n     * columns\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, } = {}) {\n        const key = foreignTable ? `${foreignTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `from` and `to` inclusively.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers['Accept'] = 'application/json';\n        }\n        else {\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = this.headers['Accept'];\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     */\n    returns() {\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param foreignTable - Set this to filter on foreign tables instead of the\n     * current table\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = foreignTable ? `${foreignTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","export const version = '1.7.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './PostgrestQueryBuilder';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nimport { DEFAULT_HEADERS } from './constants';\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head) {\n            method = 'HEAD';\n            Object.entries(args).forEach(([name, value]) => {\n                url.searchParams.append(name, `${value}`);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url,\n            headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","export const version = '2.7.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n        this.rateLimited = false;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        const status = this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n        if (status === 'rate limited') {\n            this.rateLimited = true;\n        }\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    /**\n     * listen to Postgres changes.\n     */\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const { config: { broadcast, presence }, } = this.params;\n            this._onError((e) => callback && callback('CHANNEL_ERROR', e));\n            this._onClose(() => callback && callback('CLOSED'));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n            };\n            if (this.socket.accessToken) {\n                accessTokenPayload.access_token = this.socket.accessToken;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', ({ postgres_changes: serverPostgresFilters, }) => {\n                var _a;\n                this.socket.accessToken &&\n                    this.socket.setAuth(this.socket.accessToken);\n                if (serverPostgresFilters === undefined) {\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            callback &&\n                                callback('CHANNEL_ERROR', new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                callback &&\n                    callback('CHANNEL_ERROR', new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback && callback('TIMED_OUT');\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    track(payload, opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'track',\n                payload,\n            }, opts.timeout || this.timeout);\n        });\n    }\n    untrack(opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'untrack',\n            }, opts);\n        });\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    send(payload, opts = {}) {\n        return new Promise((resolve) => {\n            var _a, _b, _c;\n            const push = this._push(payload.type, payload, opts.timeout || this.timeout);\n            if (push.rateLimited) {\n                resolve('rate limited');\n            }\n            if (payload.type === 'broadcast' &&\n                !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                resolve('ok');\n            }\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => resolve('timed out'));\n        });\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve) => {\n            const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        });\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.eventsPerSecondLimitMs = 100;\n        this.inThrottle = false;\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const eventsPerSecond = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;\n        if (eventsPerSecond)\n            this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond);\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    removeChannel(channel) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const status = yield channel.unsubscribe();\n            if (this.channels.length === 0) {\n                this.disconnect();\n            }\n            return status;\n        });\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    removeAllChannels() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values_1 = yield Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n            this.disconnect();\n            return values_1;\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        if (!this.isConnected()) {\n            this.connect();\n        }\n        const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n                const isThrottled = this._throttle(callback)();\n                if (isThrottled) {\n                    return 'rate limited';\n                }\n            }\n            else {\n                callback();\n            }\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ access_token: token });\n            if (channel.joinedOnce && channel._isJoined()) {\n                channel._push(CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Returns the URL of the websocket.\n     *\n     * @internal\n     */\n    _endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    _onConnOpen() {\n        this.log('transport', `connected to ${this._endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    /** @internal */\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /** @internal */\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n    /** @internal */\n    _throttle(callback, eventsPerSecondLimitMs = this.eventsPerSecondLimitMs) {\n        return () => {\n            if (this.inThrottle)\n                return true;\n            callback();\n            if (eventsPerSecondLimitMs > 0) {\n                this.inThrottle = true;\n                setTimeout(() => {\n                    this.inThrottle = false;\n                }, eventsPerSecondLimitMs);\n            }\n            return false;\n        };\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        return (yield import('cross-fetch')).Response;\n    }\n    return Response;\n});\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res) {\n        error\n            .json()\n            .then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((err) => {\n            reject(new StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError, StorageError } from '../lib/errors';\nimport { get, post, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\n            url.searchParams.set('token', token);\n            try {\n                let body;\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const res = yield this.fetch(url.toString(), {\n                    method: 'PUT',\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for one minute.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     */\n    createSignedUploadUrl(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers: this.headers });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get('token');\n                if (!token) {\n                    throw new StorageError('No token returned by API');\n                }\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.5.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","export const version = '2.24.0';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return CrossFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","export function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    return {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\n    };\n}\n//# sourceMappingURL=helpers.js.map","export class AuthError extends Error {\n    constructor(message, status) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status) {\n        super(message, status);\n        this.name = 'AuthApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status) {\n        super(message);\n        this.name = name;\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status);\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const NETWORK_ERROR_CODES = [502, 503, 504];\n    if (!looksLikeFetchResponse(error)) {\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), 0));\n    }\n    else if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status));\n    }\n    else {\n        // got a response from server that is not in the 500...599 range - should not retry\n        error\n            .json()\n            .then((err) => {\n            reject(new AuthApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((e) => {\n            // not a valid json response\n            reject(new AuthUnknownError(_getErrorMessage(e), e));\n        });\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport function _request(fetcher, method, url, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n        if (options === null || options === void 0 ? void 0 : options.jwt) {\n            headers['Authorization'] = `Bearer ${options.jwt}`;\n        }\n        const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            qs['redirect_to'] = options.redirectTo;\n        }\n        const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n        const data = yield _handleRequest(fetcher, method, url + queryString, { headers, noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson }, {}, options === null || options === void 0 ? void 0 : options.body);\n        return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n    });\n}\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        session.expires_at = expiresAt(data.expires_in);\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n                    headers: this.headers,\n                    jwt,\n                    noResolveJson: true,\n                });\n                return { data: null, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n                    body: { email, data: options.data },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    generateLink(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { options } = params, rest = __rest(params, [\"options\"]);\n                const body = Object.assign(Object.assign({}, rest), options);\n                if ('newEmail' in rest) {\n                    // replace newEmail with new_email in request body\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                    delete body['newEmail'];\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                    body: body,\n                    headers: this.headers,\n                    xform: _generateLinkResponse,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return {\n                        data: {\n                            properties: null,\n                            user: null,\n                        },\n                        error,\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const pagination = { nextPage: null, lastPage: 0, total: 0 };\n                const response = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                    query: {\n                        page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                        per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                    },\n                    xform: _noResolveJsonResponse,\n                });\n                if (response.error)\n                    throw response.error;\n                const users = yield response.json();\n                const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n                const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n                if (links.length > 0) {\n                    links.forEach((link) => {\n                        const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                        const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                        pagination[`${rel}Page`] = page;\n                    });\n                    pagination.total = parseInt(total);\n                }\n                return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { users: [] }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    deleteUser(id, shouldSoftDelete = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                    headers: this.headers,\n                    body: {\n                        should_soft_delete: shouldSoftDelete,\n                    },\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _listFactors(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                    headers: this.headers,\n                    xform: (factors) => {\n                        return { data: { factors }, error: null };\n                    },\n                });\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _deleteFactor(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","// Generated by genversion.\nexport const version = '2.28.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\n//# sourceMappingURL=constants.js.map","import { supportsLocalStorage } from './helpers';\nconst localStorageAdapter = {\n    getItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    },\n};\nexport default localStorageAdapter;\n//# sourceMappingURL=local-storage.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthRetryableFetchError, AuthSessionMissingError, AuthUnknownError, isAuthApiError, isAuthError, } from './lib/errors';\nimport { _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, getParameterByName, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, generatePKCEVerifier, generatePKCEChallenge, } from './lib/helpers';\nimport localStorageAdapter from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n    flowType: 'implicit',\n};\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.inMemorySession = null;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.storage = settings.storage || localStorageAdapter;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener('message', (event) => {\n                this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    initialize() {\n        if (!this.initializePromise) {\n            this.initializePromise = this._initialize();\n        }\n        return this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    _initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.initializePromise) {\n                return this.initializePromise;\n            }\n            try {\n                const isPKCEFlow = yield this._isPKCEFlow();\n                if ((this.detectSessionInUrl && this._isImplicitGrantFlow()) || isPKCEFlow) {\n                    const { data, error } = yield this._getSessionFromUrl(isPKCEFlow);\n                    if (error) {\n                        // failed login attempt via url,\n                        // remove old session as in verifyOtp, signUp and signInWith*\n                        yield this._removeSession();\n                        return { error };\n                    }\n                    const { session, redirectType } = data;\n                    yield this._saveSession(session);\n                    setTimeout(() => {\n                        if (redirectType === 'recovery') {\n                            this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                        }\n                        else {\n                            this._notifyAllSubscribers('SIGNED_IN', session);\n                        }\n                    }, 0);\n                    return { error: null };\n                }\n                // no login attempt via callback url try to recover session from storage\n                yield this._recoverAndRefresh();\n                return { error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { error };\n                }\n                return {\n                    error: new AuthUnknownError('Unexpected error during initialization', error),\n                };\n            }\n            finally {\n                yield this._handleVisibilityChange();\n            }\n        });\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUp(credentials) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    let codeChallenge = null;\n                    let codeChallengeMethod = null;\n                    if (this.flowType === 'pkce') {\n                        const codeVerifier = generatePKCEVerifier();\n                        yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                        codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                    }\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallengeMethod,\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                const session = data.session;\n                const user = data.user;\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    signInWithPassword(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            return yield this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n            });\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    exchangeCodeForSession(authCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const codeVerifier = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _sessionResponse,\n            });\n            yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            if (error || !data)\n                return { data: { user: null, session: null }, error };\n            if (data.session) {\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        });\n    }\n    /**\n     * Allows signing in with an ID token issued by certain supported providers.\n     * The ID token is verified for validity and a new session is established.\n     *\n     * @experimental\n     */\n    signInWithIdToken(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            try {\n                const { options, provider, token, nonce } = credentials;\n                const res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                    headers: this.headers,\n                    body: {\n                        provider,\n                        id_token: token,\n                        nonce,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                if ('email' in credentials) {\n                    const { email, options } = credentials;\n                    let codeChallenge = null;\n                    let codeChallengeMethod = null;\n                    if (this.flowType === 'pkce') {\n                        const codeVerifier = generatePKCEVerifier();\n                        yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                        codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                    }\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallengeMethod,\n                        },\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                if ('phone' in credentials) {\n                    const { phone, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                            create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     */\n    verifyOtp(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/verify`, {\n                    headers: this.headers,\n                    body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),\n                    redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,\n                    xform: _sessionResponse,\n                });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw new Error('An error occurred on token verification.');\n                }\n                const session = data.session;\n                const user = data.user;\n                if (session === null || session === void 0 ? void 0 : session.access_token) {\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    signInWithSSO(params) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                return yield _request(this.fetch, 'POST', `${this.url}/sso`, {\n                    body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                        ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                        : null)), { skip_http_redirect: true }),\n                    headers: this.headers,\n                    xform: _ssoResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    reauthenticate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: { session }, error: sessionError, } = yield this.getSession();\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new AuthSessionMissingError();\n                const { error } = yield _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    resend(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const endpoint = `${this.url}/resend`;\n                if ('email' in credentials) {\n                    const { email, type, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', endpoint, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            type,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                else if ('phone' in credentials) {\n                    const { phone, type, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', endpoint, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            type,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n    getSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make sure we've read the session from the url if there is one\n            // save to just await, as long we make sure _initialize() never throws\n            yield this.initializePromise;\n            let currentSession = null;\n            if (this.persistSession) {\n                const maybeSession = yield getItemAsync(this.storage, this.storageKey);\n                if (maybeSession !== null) {\n                    if (this._isValidSession(maybeSession)) {\n                        currentSession = maybeSession;\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n            }\n            else {\n                currentSession = this.inMemorySession;\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at <= Date.now() / 1000\n                : false;\n            if (!hasExpired) {\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        });\n    }\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n    getUser(jwt) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!jwt) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    // Default to Authorization header if there is no existing session\n                    jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                }\n                return yield _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    updateUser(attributes, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                const { data, error: userError } = yield _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: attributes,\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                yield this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n    _decodeJWT(jwt) {\n        return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    setSession(currentSession) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession.access_token || !currentSession.refresh_token) {\n                    throw new AuthSessionMissingError();\n                }\n                const timeNow = Date.now() / 1000;\n                let expiresAt = timeNow;\n                let hasExpired = true;\n                let session = null;\n                const payload = decodeJWTPayload(currentSession.access_token);\n                if (payload.exp) {\n                    expiresAt = payload.exp;\n                    hasExpired = expiresAt <= timeNow;\n                }\n                if (hasExpired) {\n                    const { session: refreshedSession, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        return { data: { user: null, session: null }, error: error };\n                    }\n                    if (!refreshedSession) {\n                        return { data: { user: null, session: null }, error: null };\n                    }\n                    session = refreshedSession;\n                }\n                else {\n                    const { data, error } = yield this.getUser(currentSession.access_token);\n                    if (error) {\n                        throw error;\n                    }\n                    session = {\n                        access_token: currentSession.access_token,\n                        refresh_token: currentSession.refresh_token,\n                        user: data.user,\n                        token_type: 'bearer',\n                        expires_in: expiresAt - timeNow,\n                        expires_at: expiresAt,\n                    };\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    refreshSession(currentSession) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    _getSessionFromUrl(isPKCEFlow) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new AuthImplicitGrantRedirectError('No browser detected.');\n                if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n                    throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                else if (this.flowType == 'pkce' && !isPKCEFlow) {\n                    throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                if (isPKCEFlow) {\n                    const authCode = getParameterByName('code');\n                    if (!authCode)\n                        throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n                    const { data, error } = yield this.exchangeCodeForSession(authCode);\n                    if (error)\n                        throw error;\n                    if (!data.session)\n                        throw new AuthPKCEGrantCodeExchangeError('No session detected.');\n                    let url = new URL(window.location.href);\n                    url.searchParams.delete('code');\n                    window.history.replaceState(window.history.state, '', url.toString());\n                    return { data: { session: data.session, redirectType: null }, error: null };\n                }\n                const error_description = getParameterByName('error_description');\n                if (error_description) {\n                    const error_code = getParameterByName('error_code');\n                    if (!error_code)\n                        throw new AuthImplicitGrantRedirectError('No error_code detected.');\n                    const error = getParameterByName('error');\n                    if (!error)\n                        throw new AuthImplicitGrantRedirectError('No error detected.');\n                    throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code });\n                }\n                const provider_token = getParameterByName('provider_token');\n                const provider_refresh_token = getParameterByName('provider_refresh_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new AuthImplicitGrantRedirectError('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new AuthImplicitGrantRedirectError('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new AuthImplicitGrantRedirectError('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new AuthImplicitGrantRedirectError('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { data, error } = yield this.getUser(access_token);\n                if (error)\n                    throw error;\n                const user = data.user;\n                const session = {\n                    provider_token,\n                    provider_refresh_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user,\n                };\n                const redirectType = getParameterByName('type');\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: { session, redirectType }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, redirectType: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantFlow() {\n        return (isBrowser() &&\n            (Boolean(getParameterByName('access_token')) ||\n                Boolean(getParameterByName('error_description'))));\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    _isPKCEFlow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentStorageContent = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            return isBrowser() && Boolean(getParameterByName('code')) && Boolean(currentStorageContent);\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = yield this.admin.signOut(accessToken);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n                        return { error };\n                    }\n                }\n            }\n            yield this._removeSession();\n            yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            this._notifyAllSubscribers('SIGNED_OUT', null);\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this.stateChangeEmitters.set(id, subscription);\n        this.emitInitialSession(id);\n        return { data: { subscription } };\n    }\n    emitInitialSession(id) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: { session }, error, } = yield this.getSession();\n                if (error)\n                    throw error;\n                (_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n            }\n            catch (err) {\n                (_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address.\n     * This method supports the PKCE flow.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                const codeVerifier = generatePKCEVerifier();\n                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            }\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/recover`, {\n                    body: {\n                        email,\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                        gotrue_meta_security: { captcha_token: options.captchaToken },\n                    },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    _refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const startedAt = Date.now();\n                // will attempt to refresh the token with exponential backoff\n                return yield retryable((attempt) => __awaiter(this, void 0, void 0, function* () {\n                    yield sleep(attempt * 200); // 0, 200, 400, 800, ...\n                    return yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                        body: { refresh_token: refreshToken },\n                        headers: this.headers,\n                        xform: _sessionResponse,\n                    });\n                }), (attempt, _, result) => result &&\n                    result.error &&\n                    result.error instanceof AuthRetryableFetchError &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION);\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    _handleProviderSignIn(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = yield this._getUrlForProvider(provider, {\n                redirectTo: options.redirectTo,\n                scopes: options.scopes,\n                queryParams: options.queryParams,\n            });\n            // try to open on the browser\n            if (isBrowser() && !options.skipBrowserRedirect) {\n                window.location.assign(url);\n            }\n            return { data: { provider, url }, error: null };\n        });\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const currentSession = yield getItemAsync(this.storage, this.storageKey);\n                if (!this._isValidSession(currentSession)) {\n                    if (currentSession !== null) {\n                        yield this._removeSession();\n                    }\n                    return;\n                }\n                const timeNow = Math.round(Date.now() / 1000);\n                if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                }\n                else {\n                    if (this.persistSession) {\n                        yield this._saveSession(currentSession);\n                    }\n                    this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return;\n            }\n        });\n    }\n    _callRefreshToken(refreshToken) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // refreshing is already in progress\n            if (this.refreshingDeferred) {\n                return this.refreshingDeferred.promise;\n            }\n            try {\n                this.refreshingDeferred = new Deferred();\n                if (!refreshToken) {\n                    throw new AuthSessionMissingError();\n                }\n                const { data, error } = yield this._refreshAccessToken(refreshToken);\n                if (error)\n                    throw error;\n                if (!data.session)\n                    throw new AuthSessionMissingError();\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n                const result = { session: data.session, error: null };\n                this.refreshingDeferred.resolve(result);\n                return result;\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    const result = { session: null, error };\n                    (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                    return result;\n                }\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n                throw error;\n            }\n            finally {\n                this.refreshingDeferred = null;\n            }\n        });\n    }\n    _notifyAllSubscribers(event, session, broadcast = true) {\n        if (this.broadcastChannel && broadcast) {\n            this.broadcastChannel.postMessage({ event, session });\n        }\n        this.stateChangeEmitters.forEach((x) => x.callback(event, session));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.persistSession) {\n                this.inMemorySession = session;\n            }\n            if (this.persistSession && session.expires_at) {\n                yield this._persistSession(session);\n            }\n        });\n    }\n    _persistSession(currentSession) {\n        return setItemAsync(this.storage, this.storageKey, currentSession);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.persistSession) {\n                yield removeItemAsync(this.storage, this.storageKey);\n            }\n            else {\n                this.inMemorySession = null;\n            }\n        });\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    _startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._stopAutoRefresh();\n            const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);\n            this.autoRefreshTicker = ticker;\n            if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                // ticker is a NodeJS Timeout object that has an `unref` method\n                // https://nodejs.org/api/timers.html#timeoutunref\n                // When auto refresh is used in NodeJS (like for testing) the\n                // `setInterval` is preventing the process from being marked as\n                // finished and tests run endlessly. This can be prevented by calling\n                // `unref()` on the returned object.\n                ticker.unref();\n                // @ts-ignore\n            }\n            else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n                // similar like for NodeJS, but with the Deno API\n                // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n                // @ts-ignore\n                Deno.unrefTimer(ticker);\n            }\n            // run the tick immediately\n            yield this._autoRefreshTokenTick();\n        });\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    _stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ticker = this.autoRefreshTicker;\n            this.autoRefreshTicker = null;\n            if (ticker) {\n                clearInterval(ticker);\n            }\n        });\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._startAutoRefresh();\n        });\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._stopAutoRefresh();\n        });\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    _autoRefreshTokenTick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = Date.now();\n            try {\n                const { data: { session }, } = yield this.getSession();\n                if (!session || !session.refresh_token || !session.expires_at) {\n                    return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n                    yield this._callRefreshToken(session.refresh_token);\n                }\n            }\n            catch (e) {\n                console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n        });\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    _handleVisibilityChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n                if (this.autoRefreshToken) {\n                    // in non-browser environments the refresh token ticker runs always\n                    this.startAutoRefresh();\n                }\n                return false;\n            }\n            try {\n                this.visibilityChangedCallback = () => __awaiter(this, void 0, void 0, function* () { return yield this._onVisibilityChanged(false); });\n                window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n                // now immediately call the visbility changed callback to setup with the\n                // current visbility state\n                yield this._onVisibilityChanged(true); // initial call\n            }\n            catch (error) {\n                console.error('_handleVisibilityChange', error);\n            }\n        });\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    _onVisibilityChanged(isInitial) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                if (!isInitial) {\n                    // initial visibility change setup is handled in another flow under #initialize()\n                    yield this.initializePromise;\n                    yield this._recoverAndRefresh();\n                }\n                if (this.autoRefreshToken) {\n                    // in browser environments the refresh token ticker runs only on focused tabs\n                    // which prevents race conditions\n                    this._startAutoRefresh();\n                }\n            }\n            else if (document.visibilityState === 'hidden') {\n                if (this.autoRefreshToken) {\n                    this._stopAutoRefresh();\n                }\n            }\n        });\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    _getUrlForProvider(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const urlParams = [`provider=${encodeURIComponent(provider)}`];\n            if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n                urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n            }\n            if (options === null || options === void 0 ? void 0 : options.scopes) {\n                urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n            }\n            if (this.flowType === 'pkce') {\n                const codeVerifier = generatePKCEVerifier();\n                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                const codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                const flowParams = new URLSearchParams({\n                    code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                    code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n                });\n                urlParams.push(flowParams.toString());\n            }\n            if (options === null || options === void 0 ? void 0 : options.queryParams) {\n                const query = new URLSearchParams(options.queryParams);\n                urlParams.push(query.toString());\n            }\n            return `${this.url}/authorize?${urlParams.join('&')}`;\n        });\n    }\n    _unenroll(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n    _enroll(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body: {\n                        friendly_name: params.friendlyName,\n                        factor_type: params.factorType,\n                        issuer: params.issuer,\n                    },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    _verify(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                    body: { code: params.code, challenge_id: params.challengeId },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    _challenge(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    _challengeAndVerify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: challengeData, error: challengeError } = yield this._challenge({\n                factorId: params.factorId,\n            });\n            if (challengeError) {\n                return { data: null, error: challengeError };\n            }\n            return yield this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code,\n            });\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    _listFactors() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { user }, error: userError, } = yield this.getUser();\n            if (userError) {\n                return { data: null, error: userError };\n            }\n            const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n            const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n            return {\n                data: {\n                    all: factors,\n                    totp,\n                },\n                error: null,\n            };\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    _getAuthenticatorAssuranceLevel() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { session }, error: sessionError, } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            if (!session) {\n                return {\n                    data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                    error: null,\n                };\n            }\n            const payload = this._decodeJWT(session.access_token);\n            let currentLevel = null;\n            if (payload.aal) {\n                currentLevel = payload.aal;\n            }\n            let nextLevel = currentLevel;\n            const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n            if (verifiedFactors.length > 0) {\n                nextLevel = 'aal2';\n            }\n            const currentAuthenticationMethods = payload.amr || [];\n            return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n        });\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_HEADERS } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nconst DEFAULT_REALTIME_OPTIONS = {};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : '';\n        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};\n        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n            headers: this.headers,\n            schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,\n            fetch: this.fetch,\n        });\n        this._listenForAuthEvents();\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token !== null && token !== void 0 ? token : null);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n//# sourceMappingURL=index.js.map","import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.VUE_APP_SUPABASE_URL || \"\";\nconst supabaseKey = process.env.VUE_APP_SUPABASE_ANON_KEY || \"\";\n\nexport default createClient(supabaseUrl, supabaseKey);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","expiresAt","expiresIn","timeNow","Math","round","Date","now","uuid","replace","c","r","random","v","toString","isBrowser","document","localStorageWriteTests","tested","writable","supportsLocalStorage","globalThis","localStorage","randomKey","setItem","removeItem","getParameterByName","name","url","_a","window","location","href","regex","RegExp","results","exec","decodeURIComponent","resolveFetch","customFetch","_fetch","fetch","args","looksLikeFetchResponse","maybeResponse","json","setItemAsync","storage","key","data","JSON","stringify","getItemAsync","getItem","parse","removeItemAsync","decodeBase64URL","chr1","chr2","chr3","enc1","enc2","enc3","enc4","base64","i","length","indexOf","charAt","String","fromCharCode","Deferred","constructor","this","promise","promiseConstructor","res","rej","decodeJWTPayload","token","base64UrlRegex","parts","split","Error","test","base64Url","sleep","time","accept","setTimeout","retryable","fn","isRetryable","attempt","Infinity","dec2hex","dec","substr","generatePKCEVerifier","verifierLength","array","Uint32Array","crypto","charSet","charSetLen","verifier","floor","getRandomValues","Array","from","join","sha256","randomString","encoder","TextEncoder","encodedData","encode","hash","subtle","digest","bytes","Uint8Array","map","base64urlencode","str","btoa","generatePKCEChallenge","console","warn","hashed","global","self","__self__","F","DOMException","prototype","exports","support","searchParams","iterable","Symbol","blob","Blob","formData","arrayBuffer","isDataView","obj","DataView","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","Object","call","normalizeName","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","shift","undefined","Headers","headers","forEach","append","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","chars","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","get","type","text","decode","oldValue","has","hasOwnProperty","callback","keys","push","values","entries","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","credentials","mode","signal","referrer","form","trim","parseHeaders","rawHeaders","preProcessedHeaders","line","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","err","message","stack","create","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","naiveFallback","configurable","__global__","FunctionsError","context","super","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionsClient","setAuth","Authorization","invoke","functionName","functionArgs","_headers","assign","catch","fetchError","isRelayError","PostgrestBuilder","builder","shouldThrowOnError","schema","isMaybeSingle","throwOnError","onfulfilled","onrejected","includes","async","_b","_c","count","countHeader","match","contentRange","parseInt","code","details","hint","_d","postgrestResponse","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","format","filter","Boolean","forMediatype","rollback","returns","PostgrestFilterBuilder","eq","neq","gt","gte","lt","lte","like","pattern","likeAllOf","patterns","likeAnyOf","ilike","ilikeAllOf","ilikeAnyOf","is","in","cleanedValues","s","contains","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","typePart","configPart","not","operator","or","filters","PostgrestQueryBuilder","head","allowEmpty","insert","defaultToNull","prefersHeaders","reduce","acc","x","concat","uniqueColumns","Set","upsert","onConflict","ignoreDuplicates","update","delete","unshift","version","DEFAULT_HEADERS","PostgrestClient","relation","URL","rpc","VSN","DEFAULT_TIMEOUT","WS_CLOSE_NORMAL","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","REALTIME_PRESENCE_LISTEN_EVENTS","PostgresTypes","Timer","timerCalc","timer","tries","reset","clearTimeout","scheduleTimeout","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","event","ref","payload","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","rateLimited","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","join_ref","_joinRef","updatePayload","receive","_makeRef","_replyEventName","_cancelTimeout","_matchReceive","_on","trigger","_trigger","destroy","_off","h","RealtimePresence","opts","state","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","joinedPresenceRefs","curPresences","presenceRefsToRemove","func","metas","presence","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","isNaN","log","lastIdx","closeBrace","openBrace","arr","valTrim","_","val","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","RealtimeChannel","params","bindings","closed","joinedOnce","pushBuffer","broadcast","ack","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","_isJoining","reply","subscribe","accessTokenPayload","postgres_changes","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","clientPostgresBindings","bindingsLen","newPostgresBindings","clientPostgresBinding","table","serverPostgresFilter","unsubscribe","id","presenceState","track","untrack","on","_push","leaving","onClose","close","leavePush","leave","_canPush","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","handledPayload","bind","_e","_f","bindId","bindEvent","ids","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","isEqual","obj1","obj2","k","isConnected","_leaveOpenTopic","records","old_record","RealtimeClient","endPoint","channels","transport","w3cwebsocket","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","eventsPerSecondLimitMs","inThrottle","websocket","eventsPerSecond","reconnectTimer","disconnect","connect","_endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","_onConnMessage","onclose","_onConnClose","clearInterval","getChannels","removeChannel","removeAllChannels","values_1","all","kind","msg","connectionState","connecting","Connecting","Open","closing","Closing","Closed","chan","isThrottled","_throttle","newRef","dupChannel","_appendParams","vsn","rawMessage","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","StorageError","__isStorageError","isStorageError","StorageApiError","toJSON","StorageUnknownError","originalError","resolveResponse","_getErrorMessage","error_description","handleError","Res","_getRequestParams","parameters","_handleRequest","fetcher","noResolveJson","post","put","remove","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","path","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","duplex","upload","uploadToSignedUrl","createSignedUploadUrl","signedUrl","move","fromPath","toPath","sourceKey","destinationKey","copy","Key","createSignedUrl","transform","downloadQueryParam","download","encodeURI","signedURL","createSignedUrls","paths","datum","wantsTransformation","renderPath","transformationQuery","transformOptsToQueryString","queryString","getPublicUrl","_queryString","publicUrl","prefixes","list","width","height","resize","quality","StorageBucketApi","listBuckets","getBucket","createBucket","public","file_size_limit","fileSizeLimit","allowed_mime_types","allowedMimeTypes","updateBucket","emptyBucket","deleteBucket","StorageClient","resolveHeadersConstructor","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","stripTrailingSlash","applySettingDefaults","defaults","db","dbOptions","auth","authOptions","realtime","realtimeOptions","globalOptions","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","DEFAULT_GLOBAL_OPTIONS","AuthError","__isAuthError","isAuthError","AuthApiError","isAuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthRetryableFetchError","__rest","t","p","getOwnPropertySymbols","propertyIsEnumerable","NETWORK_ERROR_CODES","_request","jwt","qs","redirectTo","xform","_sessionResponse","session","hasSession","expires_at","expires_in","user","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","_noResolveJsonResponse","refresh_token","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","inviteUserByEmail","email","generateLink","new_email","newEmail","createUser","attributes","listUsers","_g","pagination","nextPage","lastPage","total","page","per_page","perPage","users","links","link","substring","rel","getUserById","uid","updateUserById","deleteUser","shouldSoftDelete","should_soft_delete","userId","factors","GOTRUE_URL","STORAGE_KEY","EXPIRY_MARGIN","localStorageAdapter","polyfillGlobalThis","__magic__","DEFAULT_OPTIONS","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","flowType","AUTO_REFRESH_TICK_DURATION","AUTO_REFRESH_TICK_THRESHOLD","GoTrueClient","stateChangeEmitters","Map","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","broadcastChannel","inMemorySession","admin","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","BroadcastChannel","_notifyAllSubscribers","initialize","_initialize","isPKCEFlow","_isPKCEFlow","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","signUp","password","codeChallenge","codeChallengeMethod","codeVerifier","emailRedirectTo","gotrue_meta_security","captcha_token","captchaToken","code_challenge","code_challenge_method","phone","signInWithPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","exchangeCodeForSession","authCode","auth_code","code_verifier","signInWithIdToken","nonce","id_token","signInWithOtp","create_user","shouldCreateUser","verifyOtp","signInWithSSO","provider_id","providerId","domain","skip_http_redirect","reauthenticate","sessionError","getSession","endpoint","currentSession","maybeSession","_isValidSession","hasExpired","_callRefreshToken","getUser","updateUser","sessionData","userError","_decodeJWT","setSession","exp","refreshedSession","token_type","refreshSession","history","replaceState","error_code","provider_token","provider_refresh_token","currentStorageContent","onAuthStateChange","subscription","emitInitialSession","resetPasswordForEmail","_refreshAccessToken","refreshToken","startedAt","isValidSession","_getUrlForProvider","postMessage","_persistSession","_removeVisibilityChangedCallback","_startAutoRefresh","_stopAutoRefresh","ticker","_autoRefreshTokenTick","unref","Deno","unrefTimer","startAutoRefresh","stopAutoRefresh","expiresInTicks","_onVisibilityChanged","isInitial","visibilityState","urlParams","encodeURIComponent","flowParams","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","verifiedFactors","amr","SupabaseAuthClient","SupabaseClient","supabaseUrl","_h","_supabaseUrl","realtimeUrl","authUrl","storageUrl","functionsUrl","defaultStorageKey","hostname","DEFAULTS","_initSupabaseAuthClient","_getAccessToken","_initRealtimeClient","_listenForAuthEvents","functions","authHeaders","apikey","_handleTokenChanged","source","changedAccessToken","createClient","process","sfc","props","target","__vccOpts","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","native_instance","prop"],"sourceRoot":""}